# Argo CD setup
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argocd
  namespace: argocd
spec:
  project: default

  source:
    repoURL: https://github.com/phdah/etl-infra.git
    targetRevision: HEAD
    path: app/argocd
  destination:
    server: https://kubernetes.default.svc
    namespace: argocd

  syncPolicy:
    syncOptions:
      - CreateNamespace=true

    automated:
      selfHeal: true
      prune: true
# Argo Workflow setup
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argo-workflow
  namespace: argo-workflow
spec:
  project: default

  source:
    repoURL: https://github.com/phdah/etl-infra.git
    targetRevision: HEAD
    path: app/argo_workflow
  destination:
    server: https://kubernetes.default.svc
    namespace: argo-workflow

  syncPolicy:
    syncOptions:
      - CreateNamespace=true

    automated:
      selfHeal: true
      prune: true
---
# Setup kafka
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kafka
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://github.com/phdah/etl-kafka.git
    targetRevision: HEAD
    path: app
  destination:
    server: https://kubernetes.default.svc
    namespace: kafka
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
# Setup postgres
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: postgres
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://github.com/phdah/etl-postgres.git
    targetRevision: HEAD
    path: app
  destination:
    server: https://kubernetes.default.svc
    namespace: postgres
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
